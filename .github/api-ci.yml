name: Python API CI

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'url-shortener/**'
      - '!url-shortener/**.md'

env:
  POSTGRES_USER: local
  POSTGRES_PASSWORD: local
  POSTGRES_DB: app
  POSTGRES_PORT: 5432
  POSTGRES_HOST: localhost
  PYTHON_VERSION: "3.12"
  POETRY_VERSION: "1.8.3"

jobs:
  lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: url-shortener

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install Poetry
      uses: abatilo/actions-poetry@v3.0.0
      with:
        poetry-version: ${{ env.POETRY_VERSION }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        poetry config virtualenvs.create false
        poetry install

    - name: Lint with flake8 for syntax errors or undefined names
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    - name: Lint with flake8 everything else
      run: |
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
  
  # TODO
  # test: